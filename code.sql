CREATE DATABASE portal;
USE portal;

CREATE TABLE LOGIN_INFO
( USERID VARCHAR(40) PRIMARY KEY NOT NULL,
 PASSWORD_ VARCHAR(30) NOT NULL
);
CREATE TABLE STUDENT
( USERID VARCHAR2(40) NOT NULL,
 S_NAME VARCHAR2(40) NOT NULL,
 ROLL_NUMBER NUMBER PRIMARY KEY NOT NULL, 
 UG_PG VARCHAR(2) NOT NULL,
 FOREIGN KEY (USERID) REFERENCES LOGIN_INFO(USERID)
);
CREATE TABLE FEES
( ROLL_NUMBER NUMBER NOT NULL,
 FOREIGN KEY (ROLL_NUMBER) REFERENCES STUDENT(ROLL_NUMBER),
 TUTION_FEE NUMBER NOT NULL,
 HOSTEL_FEE NUMBER NOT NULL,
 OTHER_CHARGES NUMBER NOT NULL,
 PRIMARY KEY (ROLL_NUMBER)
);
CREATE TABLE SUBJECT
( SUBJECT_NAME VARCHAR(40) PRIMARY KEY NOT NULL,
 RECORDINGS VARCHAR(100) NOT NULL,
 READING_MATERIAL VARCHAR(100) NOT NULL,
 CREDITS SMALLINT NOT NULL
);
CREATE TABLE EXAM
( SUBJECT VARCHAR(40) NOT NULL,
 EXAM_CODE VARCHAR(6) PRIMARY KEY NOT NULL,
 MARKS NUMBER NOT NULL,
 EXAM_DATE DATE NOT NULL,
 LENGHT VARCHAR(7) NOT NULL,
 TYPE_ VARCHAR(7) NOT NULL,
 FOREIGN KEY (SUBJECT) REFERENCES SUBJECT(SUBJECT_NAME)
);
CREATE TABLE COURSE
( ROLL_NUMBER NUMBER NOT NULL,
 SUBJECT_NAME VARCHAR2(40) NOT NULL,
 FOREIGN KEY (ROLL_NUMBER) REFERENCES STUDENT(ROLL_NUMBER),
 FOREIGN KEY (SUBJECT_NAME) REFERENCES SUBJECT(SUBJECT_NAME),
 PRIMARY KEY(SUBJECT_NAME,ROLL_NUMBER)
); 
CREATE TABLE PROJECTS
( PROJECT_NAME VARCHAR2(40) PRIMARY KEY NOT NULL,
 SUBJECT VARCHAR2(40) NOT NULL,
 YEAR_ INT NOT NULL
);
CREATE TABLE MADE
( ROLL_NUMBER NUMBER NOT NULL,
 PROJECT_NAME VARCHAR2(40) NOT NULL,
 FOREIGN KEY (ROLL_NUMBER) REFERENCES STUDENT(ROLL_NUMBER),
 FOREIGN KEY (PROJECT_NAME) REFERENCES PROJECTS(PROJECT_NAME)
);
CREATE TABLE FACULTY
( FAC_ID NUMBER PRIMARY KEY NOT NULL,
 FAC_NAME VARCHAR(20) NOT NULL,
 EMAIL VARCHAR(100) NOT NULL,
 SUBJECT_NAME VARCHAR(40) NOT NULL,
 FOREIGN KEY (SUBJECT_NAME) REFERENCES SUBJECT(SUBJECT_NAME)
);
CREATE TABLE ATTENDANCE
( ROLL_NUMBER NUMBER NOT NULL,
 FAC_ID NUMBER NOT NULL,
 PERCENTAGE NUMBER NOT NULL,
 FOREIGN KEY (ROLL_NUMBER) REFERENCES STUDENT(ROLL_NUMBER),
 FOREIGN KEY (FAC_ID) REFERENCES FACULTY(FAC_ID)
);
